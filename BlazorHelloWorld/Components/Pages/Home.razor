@page "/"
@using BlazorHelloWorld.Infrastructure
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject IJSRuntime JavascriptRuntime
@inject VideoService Service

<PageTitle>Weather</PageTitle>

<div class="container">
    <div class="panel-body">
        <h3 class="panel-title">Your stream</h3>
        <div id="publisher"></div>
        <div>
            <select id="cameras"></select>
            <br />
            <select id="mics"></select>
        </div>
    </div>
    <div class="panel-body">
        <h3 class="panel-title">Other streams</h3>
        <p>This part contains all other streams from your session.</p>
        <div id="subscribers">
        </div>
    </div>
    <div>
        <button class="btn btn-success" onclick="@StartArchiving" disabled="@isArchiving">Start archiving</button>
        <button class="btn btn-danger" onclick="@StopArchiving" disabled="@(!isArchiving)">Stop archiving</button>
    </div>
</div>

@code {
    private bool isArchiving => this.archiveId != Guid.Empty;
    private SessionCredentials session;
    private Guid archiveId;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            this.session = Service.CreateSession();
            await JavascriptRuntime.InvokeVoidAsync("initializeStream", Service.GetOpenTokId(), session.SessionId, session.Token);    
        }
    }

    private async Task StartArchiving()
    {
        var archive = await Service.StartArchiving(this.session.SessionId);
        this.archiveId = archive.Id;
    }

    private Task StopArchiving() => Service.StopArchiving(this.archiveId.ToString());
}